{"ast":null,"code":"var _jsxFileName = \"/Users/lyndsayfutrell/Desktop/FullStack/ProjectTen/client/src/components/CreateCourse.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CreateCourse extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      errors: []\n    };\n    this.change = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState(() => {\n        return {\n          [name]: value\n        };\n      });\n    };\n    this.submit = () => {\n      const {\n        context\n      } = this.props;\n      const {\n        password\n      } = context;\n      const userId = context.authenticatedUser[\"User ID\"];\n      const username = context.authenticatedUser.Username;\n      const {\n        title,\n        description,\n        estimatedTime,\n        materialsNeeded\n      } = this.state;\n      const body = {\n        \"title\": title,\n        \"description\": description,\n        \"estimatedTime\": estimatedTime,\n        \"materialsNeeded\": materialsNeeded,\n        \"userId\": userId\n      };\n      context.data.createCourse(username, password, body).then(errors => {\n        console.log(errors.length);\n        if (errors.length) {\n          this.setState({\n            errors\n          });\n        } else {\n          this.props.history.push(`/courses`);\n        }\n      });\n      // .catch( err => {\n      // console.log(err);\n      // // this.props.history.push('/error')\n      // })\n    };\n    this.cancel = () => {\n      this.props.history.push('/');\n    };\n  }\n  render() {\n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          cancel: this.cancel,\n          errors: errors,\n          submit: this.submit,\n          submitButtonText: \"Create Course\",\n          elements: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main--flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"title\",\n                  children: \"Course Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"title\",\n                  name: \"title\",\n                  type: \"text\",\n                  value: title,\n                  onChange: this.change,\n                  placeholder: \"Course Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"By \", this.props.context.authenticatedUser.Name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"description\",\n                  children: \"Course Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"description\",\n                  name: \"description\",\n                  type: \"textarea\",\n                  value: description,\n                  onChange: this.change,\n                  placeholder: \"Enter Course Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"estimatedTime\",\n                  children: \"Estimated Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"estimatedTime\",\n                  name: \"tiestimatedTimetle\",\n                  type: \"text\",\n                  value: estimatedTime,\n                  onChange: this.change,\n                  placeholder: \"Estimated Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"materialsNeeded\",\n                  children: \"Materials Needed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"materialsNeeded\",\n                  name: \"materialsNeeded\",\n                  type: \"textarea\",\n                  value: materialsNeeded,\n                  onChange: this.change,\n                  placeholder: \"Enter Materials Needed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default _c = withRouter(CreateCourse);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","withRouter","Cookies","Form","CreateCourse","state","title","description","estimatedTime","materialsNeeded","errors","change","event","name","target","value","setState","submit","context","props","password","userId","authenticatedUser","username","Username","body","data","createCourse","then","console","log","length","history","push","cancel","render","Name"],"sources":["/Users/lyndsayfutrell/Desktop/FullStack/ProjectTen/client/src/components/CreateCourse.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport Cookies from 'js-cookie';\nimport Form from './Form';\n\nclass CreateCourse extends Component {\n\n    state = {\n        title: '',\n        description: '',\n        estimatedTime: '',\n        materialsNeeded: '',\n        errors: [],\n      }\n    \n      render() {\n        const {\n          title,\n          description,\n          estimatedTime,\n          materialsNeeded,\n          errors,\n        } = this.state;\n\n    \n    return (\n        <main>\n            <div className=\"wrap\">\n                <h2>Create Course</h2>\n                <Form \n                cancel={this.cancel}\n                errors={errors}\n                submit={this.submit}\n                submitButtonText=\"Create Course\"\n                elements={() => (\n                    <React.Fragment>\n                    <div className=\"main--flex\">\n                        <div>\n                            <label for=\"title\">Course Title</label>\n                            <input \n                                id=\"title\" \n                                name=\"title\" \n                                type=\"text\"\n                                value={title} \n                                onChange={this.change} \n                                placeholder=\"Course Title\" />\n\n                            <p>By {this.props.context.authenticatedUser.Name}</p>\n\n                            <label for=\"description\">Course Description</label>\n                            <textarea \n                                id=\"description\" \n                                name=\"description\" \n                                type=\"textarea\"\n                                value={description} \n                                onChange={this.change} \n                                placeholder=\"Enter Course Description\" />\n\n                        </div>\n                        <div>\n                            <label for=\"estimatedTime\">Estimated Time</label>\n                                <input \n                                    id=\"estimatedTime\" \n                                    name=\"tiestimatedTimetle\" \n                                    type=\"text\"\n                                    value={estimatedTime} \n                                    onChange={this.change} \n                                    placeholder=\"Estimated Time\" />\n\n                            <label for=\"materialsNeeded\">Materials Needed</label>\n                            <textarea \n                                id=\"materialsNeeded\" \n                                name=\"materialsNeeded\" \n                                type=\"textarea\"\n                                value={materialsNeeded} \n                                onChange={this.change} \n                                placeholder=\"Enter Materials Needed\" />\n                        </div>\n                    </div>\n                    </React.Fragment>\n            )} />\n            </div>\n        </main>\n    );\n}\n\nchange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\nsubmit = () => {\n    const { context } = this.props;\n    const { password } = context;\n    const userId = context.authenticatedUser[ \"User ID\" ];\n    const username = context.authenticatedUser.Username;\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\n    const body = {\n\n        \"title\": title,\n        \"description\": description,\n        \"estimatedTime\": estimatedTime,\n        \"materialsNeeded\": materialsNeeded,\n        \"userId\": userId,\n\n    };\n    context.data.createCourse(username, password, body)\n    .then(errors => {\n            console.log(errors.length)\n            if (errors.length) {\n              this.setState({ errors });\n            }  else {\n            this.props.history.push(`/courses`);\n            }\n        })\n        // .catch( err => {\n        // console.log(err);\n        // // this.props.history.push('/error')\n        // })\n  }\n\n    cancel = () => {\n        this.props.history.push('/');\n      }\n}\n\nexport default withRouter(CreateCourse);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}