{"ast":null,"code":"var _jsxFileName = \"/Users/lyndsayfutrell/Desktop/FullStack/ProjectTen/client/src/components/UpdateCourse.js\";\nimport React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CreateCourse extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      authorId: '',\n      didMount: '',\n      authUserId: '',\n      errors: []\n    };\n    this.change = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState(() => {\n        return {\n          [name]: value\n        };\n      });\n    };\n    this.submit = () => {\n      const id = this.props.match.params.id;\n      const {\n        context\n      } = this.props;\n      const {\n        password\n      } = context;\n      const userId = context.authenticatedUser[\"User ID\"];\n      const username = context.authenticatedUser.Username;\n      const {\n        title,\n        description,\n        estimatedTime,\n        materialsNeeded\n      } = this.state;\n      const body = {\n        \"title\": title,\n        \"description\": description,\n        \"estimatedTime\": estimatedTime,\n        \"materialsNeeded\": materialsNeeded,\n        \"userId\": userId\n      };\n      context.data.updateCourse(username, password, body, id).then(errors => {\n        if (errors.length) {\n          this.setState({\n            errors\n          });\n        } else {\n          this.props.history.push(`/courses/${id}`);\n        }\n      }).catch(err => {\n        console.log(err);\n        this.props.history.push('/error');\n      });\n    };\n    this.cancel = () => {\n      const id = this.props.match.params.id;\n      this.props.history.push(`/courses/${id}`);\n    };\n  }\n  //run api and set state\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.context.data.getCourseById(id).then(data => {\n      this.setState({\n        title: data.title\n      });\n      this.setState({\n        description: data.description\n      });\n      this.setState({\n        estimatedTime: data.estimatedTime\n      });\n      this.setState({\n        materialsNeeded: data.materialsNeeded\n      });\n      this.setState({\n        authorId: data.userId\n      });\n      this.setState({\n        didMount: true\n      });\n      this.setState({\n        authUserId: this.props.context.authenticatedUser[\"User ID\"]\n      });\n    }).catch(err => {\n      this.setState({\n        didMount: true\n      });\n      console.log(err);\n    });\n  }\n  render() {\n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      authorId,\n      authUserId,\n      didMount,\n      errors\n    } = this.state;\n    console.log(this.props.context.authenticatedUser);\n\n    // if mount function is complete either failed or success, page will return            \n    if (didMount === true) {\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        children:\n        //checks if author is logged in user, if not reroutes to forbidden\n        authUserId !== authorId ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/forbidden'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            cancel: this.cancel,\n            errors: errors,\n            submit: this.submit,\n            submitButtonText: \"Update Course\",\n            elements: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"main--flex\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"title\",\n                    children: \"Course Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"title\",\n                    name: \"title\",\n                    type: \"text\",\n                    value: title,\n                    onChange: this.change,\n                    placeholder: \"Course Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"By \", this.props.context.authenticatedUser.Name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"description\",\n                    children: \"Course Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"description\",\n                    name: \"description\",\n                    type: \"textarea\",\n                    value: description,\n                    onChange: this.change,\n                    placeholder: \"Enter Course Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"estimatedTime\",\n                    children: \"Estimated Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"estimatedTime\",\n                    name: \"tiestimatedTimetle\",\n                    type: \"text\",\n                    value: estimatedTime,\n                    onChange: this.change,\n                    placeholder: \"Estimated Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"materialsNeeded\",\n                    children: \"Materials Needed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"materialsNeeded\",\n                    name: \"materialsNeeded\",\n                    type: \"textarea\",\n                    value: materialsNeeded,\n                    onChange: this.change,\n                    placeholder: \"Enter Materials Needed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  //updates values on change\n}\n\nexport default _c = withRouter(CreateCourse);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","Redirect","withRouter","Form","CreateCourse","state","title","description","estimatedTime","materialsNeeded","authorId","didMount","authUserId","errors","change","event","name","target","value","setState","submit","id","props","match","params","context","password","userId","authenticatedUser","username","Username","body","data","updateCourse","then","length","history","push","catch","err","console","log","cancel","componentDidMount","getCourseById","render","pathname","Name"],"sources":["/Users/lyndsayfutrell/Desktop/FullStack/ProjectTen/client/src/components/UpdateCourse.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom'\nimport Form from './Form';\n\nclass CreateCourse extends Component {\n    state = {\n        title: '',\n        description: '',\n        estimatedTime: '',\n        materialsNeeded: '',\n        authorId: '',\n        didMount: '',\n        authUserId: '',\n        errors: [],\n      }\n\n      //run api and set state\n      componentDidMount() {\n        const id = this.props.match.params.id;\n        this.props.context.data.getCourseById(id)\n        .then((data) => {\n            this.setState({ title: data.title })\n            this.setState({ description: data.description })\n            this.setState({ estimatedTime: data.estimatedTime })\n            this.setState({ materialsNeeded: data.materialsNeeded })\n            this.setState({ authorId: data.userId })\n            this.setState({ didMount: true })\n            this.setState({ authUserId: this.props.context.authenticatedUser[ \"User ID\" ] })\n        })\n        .catch((err) => {\n          this.setState({ didMount: true })\n            console.log(err);\n        });\n    }\n    \n      render() {\n        const {\n          title,\n          description,\n          estimatedTime,\n          materialsNeeded,\n          authorId,\n          authUserId,\n          didMount,\n          errors,\n        } = this.state;\n\nconsole.log(this.props.context.authenticatedUser);\n\n\n// if mount function is complete either failed or success, page will return            \nif (didMount === true) {\n    return (\n        <main>\n        { //checks if author is logged in user, if not reroutes to forbidden\n          authUserId !== authorId\n            ? <Redirect to={{\n                  pathname: '/forbidden',\n                }} />\n            :<div className=\"wrap\">\n                <h2>Update</h2>\n                <Form \n                cancel={this.cancel}\n                errors={errors}\n                submit={this.submit}\n                submitButtonText=\"Update Course\"\n                elements={() => (\n                    <React.Fragment>\n                    <div className=\"main--flex\">\n                        <div>\n                            <label htmlFor=\"title\">Course Title</label>\n                            <input \n                                id=\"title\" \n                                name=\"title\" \n                                type=\"text\"\n                                value={title} \n                                onChange={this.change} \n                                placeholder=\"Course Title\" />\n\n                            <p>By {this.props.context.authenticatedUser.Name}</p>\n\n                            <label htmlFor=\"description\">Course Description</label>\n                            <textarea \n                                id=\"description\" \n                                name=\"description\" \n                                type=\"textarea\"\n                                value={description} \n                                onChange={this.change} \n                                placeholder=\"Enter Course Description\" />\n\n                        </div>\n                        <div>\n                            <label htmlFor=\"estimatedTime\">Estimated Time</label>\n                                <input \n                                    id=\"estimatedTime\" \n                                    name=\"tiestimatedTimetle\" \n                                    type=\"text\"\n                                    value={estimatedTime} \n                                    onChange={this.change} \n                                    placeholder=\"Estimated Time\" />\n\n                            <label htmlFor=\"materialsNeeded\">Materials Needed</label>\n                            <textarea \n                                id=\"materialsNeeded\" \n                                name=\"materialsNeeded\" \n                                type=\"textarea\"\n                                value={materialsNeeded} \n                                onChange={this.change} \n                                placeholder=\"Enter Materials Needed\" />\n                        </div>\n                    </div>\n                    </React.Fragment>\n            )} />\n            </div>\n        }\n        </main>\n    );\n}}\n\n\n//updates values on change\nchange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  //handles submit and runs update course function\nsubmit = () => {\n    const id = this.props.match.params.id;\n    const { context } = this.props;\n    const { password } = context;\n    const userId = context.authenticatedUser[ \"User ID\" ];\n    const username = context.authenticatedUser.Username;\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\n    const body = {\n\n        \"title\": title,\n        \"description\": description,\n        \"estimatedTime\": estimatedTime,\n        \"materialsNeeded\": materialsNeeded,\n        \"userId\": userId,\n\n    };\n    context.data.updateCourse(username, password, body, id)\n    .then(errors => {\n            if (errors.length) {\n              this.setState({ errors });\n            }  else {\n            this.props.history.push(`/courses/${id}`);\n            }\n        })\n        .catch( err => {\n        console.log(err);\n        this.props.history.push('/error')\n        })\n  }\n\n  //handles cancel function\n    cancel = () => {\n        const id = this.props.match.params.id;\n        this.props.history.push(`/courses/${id}`);\n      }\n}\n\nexport default withRouter(CreateCourse);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,EAAEC,UAAU,QAAQ,kBAAkB;AACvD,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,YAAY,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KACjCK,KAAK,GAAG;MACJC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,EAAE;MACjBC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,MAAM,EAAE;IACV,CAAC;IAAA,KA2GPC,MAAM,GAAIC,KAAK,IAAK;MAChB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACD,IAAI;MAC9B,MAAME,KAAK,GAAGH,KAAK,CAACE,MAAM,CAACC,KAAK;MAEhC,IAAI,CAACC,QAAQ,CAAC,MAAM;QAClB,OAAO;UACL,CAACH,IAAI,GAAGE;QACV,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAAA,KAGHE,MAAM,GAAG,MAAM;MACX,MAAMC,EAAE,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACH,EAAE;MACrC,MAAM;QAAEI;MAAQ,CAAC,GAAG,IAAI,CAACH,KAAK;MAC9B,MAAM;QAAEI;MAAS,CAAC,GAAGD,OAAO;MAC5B,MAAME,MAAM,GAAGF,OAAO,CAACG,iBAAiB,CAAE,SAAS,CAAE;MACrD,MAAMC,QAAQ,GAAGJ,OAAO,CAACG,iBAAiB,CAACE,QAAQ;MACnD,MAAM;QAAExB,KAAK;QAAEC,WAAW;QAAEC,aAAa;QAAEC;MAAgB,CAAC,GAAG,IAAI,CAACJ,KAAK;MACzE,MAAM0B,IAAI,GAAG;QAET,OAAO,EAAEzB,KAAK;QACd,aAAa,EAAEC,WAAW;QAC1B,eAAe,EAAEC,aAAa;QAC9B,iBAAiB,EAAEC,eAAe;QAClC,QAAQ,EAAEkB;MAEd,CAAC;MACDF,OAAO,CAACO,IAAI,CAACC,YAAY,CAACJ,QAAQ,EAAEH,QAAQ,EAAEK,IAAI,EAAEV,EAAE,CAAC,CACtDa,IAAI,CAACrB,MAAM,IAAI;QACR,IAAIA,MAAM,CAACsB,MAAM,EAAE;UACjB,IAAI,CAAChB,QAAQ,CAAC;YAAEN;UAAO,CAAC,CAAC;QAC3B,CAAC,MAAO;UACR,IAAI,CAACS,KAAK,CAACc,OAAO,CAACC,IAAI,CAAE,YAAWhB,EAAG,EAAC,CAAC;QACzC;MACJ,CAAC,CAAC,CACDiB,KAAK,CAAEC,GAAG,IAAI;QACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACjB,KAAK,CAACc,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MACjC,CAAC,CAAC;IACR,CAAC;IAAA,KAGCK,MAAM,GAAG,MAAM;MACX,MAAMrB,EAAE,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACH,EAAE;MACrC,IAAI,CAACC,KAAK,CAACc,OAAO,CAACC,IAAI,CAAE,YAAWhB,EAAG,EAAC,CAAC;IAC3C,CAAC;EAAA;EAvJD;EACAsB,iBAAiB,GAAG;IAClB,MAAMtB,EAAE,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACH,EAAE;IACrC,IAAI,CAACC,KAAK,CAACG,OAAO,CAACO,IAAI,CAACY,aAAa,CAACvB,EAAE,CAAC,CACxCa,IAAI,CAAEF,IAAI,IAAK;MACZ,IAAI,CAACb,QAAQ,CAAC;QAAEb,KAAK,EAAE0B,IAAI,CAAC1B;MAAM,CAAC,CAAC;MACpC,IAAI,CAACa,QAAQ,CAAC;QAAEZ,WAAW,EAAEyB,IAAI,CAACzB;MAAY,CAAC,CAAC;MAChD,IAAI,CAACY,QAAQ,CAAC;QAAEX,aAAa,EAAEwB,IAAI,CAACxB;MAAc,CAAC,CAAC;MACpD,IAAI,CAACW,QAAQ,CAAC;QAAEV,eAAe,EAAEuB,IAAI,CAACvB;MAAgB,CAAC,CAAC;MACxD,IAAI,CAACU,QAAQ,CAAC;QAAET,QAAQ,EAAEsB,IAAI,CAACL;MAAO,CAAC,CAAC;MACxC,IAAI,CAACR,QAAQ,CAAC;QAAER,QAAQ,EAAE;MAAK,CAAC,CAAC;MACjC,IAAI,CAACQ,QAAQ,CAAC;QAAEP,UAAU,EAAE,IAAI,CAACU,KAAK,CAACG,OAAO,CAACG,iBAAiB,CAAE,SAAS;MAAG,CAAC,CAAC;IACpF,CAAC,CAAC,CACDU,KAAK,CAAEC,GAAG,IAAK;MACd,IAAI,CAACpB,QAAQ,CAAC;QAAER,QAAQ,EAAE;MAAK,CAAC,CAAC;MAC/B6B,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;EACN;EAEEM,MAAM,GAAG;IACP,MAAM;MACJvC,KAAK;MACLC,WAAW;MACXC,aAAa;MACbC,eAAe;MACfC,QAAQ;MACRE,UAAU;MACVD,QAAQ;MACRE;IACF,CAAC,GAAG,IAAI,CAACR,KAAK;IAEtBmC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACnB,KAAK,CAACG,OAAO,CAACG,iBAAiB,CAAC;;IAGjD;IACA,IAAIjB,QAAQ,KAAK,IAAI,EAAE;MACnB,oBACI;QAAA;QACE;QACAC,UAAU,KAAKF,QAAQ,gBACnB,QAAC,QAAQ;UAAC,EAAE,EAAE;YACVoC,QAAQ,EAAE;UACZ;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,gBACR;UAAK,SAAS,EAAC,MAAM;UAAA,wBAClB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe,eACf,QAAC,IAAI;YACL,MAAM,EAAE,IAAI,CAACJ,MAAO;YACpB,MAAM,EAAE7B,MAAO;YACf,MAAM,EAAE,IAAI,CAACO,MAAO;YACpB,gBAAgB,EAAC,eAAe;YAChC,QAAQ,EAAE,mBACN,QAAC,KAAK,CAAC,QAAQ;cAAA,uBACf;gBAAK,SAAS,EAAC,YAAY;gBAAA,wBACvB;kBAAA,wBACI;oBAAO,OAAO,EAAC,OAAO;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAqB,eAC3C;oBACI,EAAE,EAAC,OAAO;oBACV,IAAI,EAAC,OAAO;oBACZ,IAAI,EAAC,MAAM;oBACX,KAAK,EAAEd,KAAM;oBACb,QAAQ,EAAE,IAAI,CAACQ,MAAO;oBACtB,WAAW,EAAC;kBAAc;oBAAA;oBAAA;oBAAA;kBAAA,QAAG,eAEjC;oBAAA,kBAAO,IAAI,CAACQ,KAAK,CAACG,OAAO,CAACG,iBAAiB,CAACmB,IAAI;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAK,eAErD;oBAAO,OAAO,EAAC,aAAa;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAA2B,eACvD;oBACI,EAAE,EAAC,aAAa;oBAChB,IAAI,EAAC,aAAa;oBAClB,IAAI,EAAC,UAAU;oBACf,KAAK,EAAExC,WAAY;oBACnB,QAAQ,EAAE,IAAI,CAACO,MAAO;oBACtB,WAAW,EAAC;kBAA0B;oBAAA;oBAAA;oBAAA;kBAAA,QAAG;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAE3C,eACN;kBAAA,wBACI;oBAAO,OAAO,EAAC,eAAe;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAuB,eACjD;oBACI,EAAE,EAAC,eAAe;oBAClB,IAAI,EAAC,oBAAoB;oBACzB,IAAI,EAAC,MAAM;oBACX,KAAK,EAAEN,aAAc;oBACrB,QAAQ,EAAE,IAAI,CAACM,MAAO;oBACtB,WAAW,EAAC;kBAAgB;oBAAA;oBAAA;oBAAA;kBAAA,QAAG,eAEvC;oBAAO,OAAO,EAAC,iBAAiB;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAyB,eACzD;oBACI,EAAE,EAAC,iBAAiB;oBACpB,IAAI,EAAC,iBAAiB;oBACtB,IAAI,EAAC,UAAU;oBACf,KAAK,EAAEL,eAAgB;oBACvB,QAAQ,EAAE,IAAI,CAACK,MAAO;oBACtB,WAAW,EAAC;kBAAwB;oBAAA;oBAAA;oBAAA;kBAAA,QAAG;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QACzC;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACJ;cAAA;cAAA;cAAA;YAAA;UAEZ;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACC;QAAA;QAAA;QAAA;MAAA,QAEH;IAEf;EAAC;;EAGD;AAgDA;;AAEA,oBAAeZ,UAAU,CAACE,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}