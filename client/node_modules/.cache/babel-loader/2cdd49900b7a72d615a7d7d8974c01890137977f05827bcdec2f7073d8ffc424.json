{"ast":null,"code":"import DeleteCourse from './components/DeleteCourse';\nimport config from './config';\nexport default class Data {\n  api(path) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let requiresAuth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let credentials = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    const url = config.apiBaseUrl + path;\n    const options = {\n      method,\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      }\n    };\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n    if (requiresAuth) {\n      const encodedCredentials = btoa(`${credentials.username}:${credentials.password}`);\n      options.headers['Authorization'] = `Basic ${encodedCredentials}`;\n    }\n    return fetch(url, options);\n  }\n  async getUser(username, password) {\n    const response = await this.api(`/users`, 'GET', null, true, {\n      username,\n      password\n    });\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n  async createUser(user) {\n    const response = await this.api('/users', 'POST', user);\n    if (response.status === 201) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n  async getCourses() {\n    const response = await this.api('/courses', 'GET');\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    } else {\n      throw new Error();\n    }\n  }\n  async getCourseById(id) {\n    const response = await this.api(`/courses/${id}`, 'GET');\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    } else {\n      throw new Error();\n    }\n  }\n  async createCourse(username, password, body) {\n    const response = await this.api('/courses', 'POST', body, true, {\n      username,\n      password\n    });\n    if (response.status === 201) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n  async deleteCourse(username, password, id) {\n    const response = await this.api(`/courses/${id}`, 'DELETE', null, true, {\n      username,\n      password\n    });\n    if (response.status === 204) {\n      return [];\n    } else if (response.status === 401) {\n      console.log(response.body.json());\n      return response.json().then(data => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n}","map":{"version":3,"names":["DeleteCourse","config","Data","api","path","method","body","requiresAuth","credentials","url","apiBaseUrl","options","headers","JSON","stringify","encodedCredentials","btoa","username","password","fetch","getUser","response","status","json","then","data","Error","createUser","user","errors","getCourses","getCourseById","id","createCourse","deleteCourse","console","log"],"sources":["/Users/lyndsayfutrell/Desktop/FullStack/ProjectTen/client/src/Data.js"],"sourcesContent":["import DeleteCourse from './components/DeleteCourse';\nimport config from './config';\n\nexport default class Data {\n  api(path, method = 'GET', body = null, requiresAuth = false, credentials = null) {\n    const url = config.apiBaseUrl + path;\n  \n    const options = {\n      method,\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      \n    };\n\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if (requiresAuth) {    \n      const encodedCredentials = btoa(`${credentials.username}:${credentials.password}`);\n\n      options.headers['Authorization'] = `Basic ${encodedCredentials}`;\n    }\n    return fetch(url, options);\n  }\n\n  async getUser(username, password) {\n    const response = await this.api(`/users`, 'GET', null, true, { username, password });\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    }\n    else if (response.status === 401) {\n      return null;\n    }\n    else {\n      throw new Error();\n    }\n  }\n  \n  async createUser(user) {\n    const response = await this.api('/users', 'POST', user);\n    if (response.status === 201) {\n      return [];\n    }\n    else if (response.status === 400) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    }\n    else {\n      throw new Error();\n    }\n  }\n\n  async getCourses() {\n    const response = await this.api('/courses', 'GET');\n    if (response.status === 200) {\n        return response.json().then((data) => data);\n      } else {\n            throw new Error();\n        }\n      \n    }\n\n    async getCourseById(id) {\n        const response = await this.api(`/courses/${id}`, 'GET');\n        if (response.status === 200) {\n            return response.json().then((data) => data);\n          } else {\n                throw new Error();\n            }\n          \n        }\n    \n    async createCourse(username, password, body) {\n        const response = await this.api('/courses', 'POST', body, true, { username, password });\n        if (response.status === 201) {\n            return [];\n        } else if (response.status === 400) {\n                return response.json().then(data => {\n                  return data.errors;\n                });\n          } else {\n                throw new Error();\n            } \n        }\n    \n        async deleteCourse(username, password, id) {\n            const response = await this.api(`/courses/${id}`, 'DELETE', null, true, { username, password });\n            if (response.status === 204) {\n                return [];\n            } else if (response.status === 401) {\n                console.log(response.body.json())\n                return response.json().then(data => {\n                    return data.errors;\n                  });\n            } else {\n                throw new Error();\n            }\n    \n        }\n    \n    \n    }\n\n    \n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,2BAA2B;AACpD,OAAOC,MAAM,MAAM,UAAU;AAE7B,eAAe,MAAMC,IAAI,CAAC;EACxBC,GAAG,CAACC,IAAI,EAAyE;IAAA,IAAvEC,MAAM,uEAAG,KAAK;IAAA,IAAEC,IAAI,uEAAG,IAAI;IAAA,IAAEC,YAAY,uEAAG,KAAK;IAAA,IAAEC,WAAW,uEAAG,IAAI;IAC7E,MAAMC,GAAG,GAAGR,MAAM,CAACS,UAAU,GAAGN,IAAI;IAEpC,MAAMO,OAAO,GAAG;MACdN,MAAM;MACNO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IAEF,CAAC;IAED,IAAIN,IAAI,KAAK,IAAI,EAAE;MACjBK,OAAO,CAACL,IAAI,GAAGO,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC;IACrC;IAEA,IAAIC,YAAY,EAAE;MAChB,MAAMQ,kBAAkB,GAAGC,IAAI,CAAE,GAAER,WAAW,CAACS,QAAS,IAAGT,WAAW,CAACU,QAAS,EAAC,CAAC;MAElFP,OAAO,CAACC,OAAO,CAAC,eAAe,CAAC,GAAI,SAAQG,kBAAmB,EAAC;IAClE;IACA,OAAOI,KAAK,CAACV,GAAG,EAAEE,OAAO,CAAC;EAC5B;EAEA,MAAMS,OAAO,CAACH,QAAQ,EAAEC,QAAQ,EAAE;IAChC,MAAMG,QAAQ,GAAG,MAAM,IAAI,CAAClB,GAAG,CAAE,QAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;MAAEc,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACpF,IAAIG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOD,QAAQ,CAACE,IAAI,EAAE,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAAC;IAC3C,CAAC,MACI,IAAIJ,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAChC,OAAO,IAAI;IACb,CAAC,MACI;MACH,MAAM,IAAII,KAAK,EAAE;IACnB;EACF;EAEA,MAAMC,UAAU,CAACC,IAAI,EAAE;IACrB,MAAMP,QAAQ,GAAG,MAAM,IAAI,CAAClB,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAEyB,IAAI,CAAC;IACvD,IAAIP,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAO,EAAE;IACX,CAAC,MACI,IAAID,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAChC,OAAOD,QAAQ,CAACE,IAAI,EAAE,CAACC,IAAI,CAACC,IAAI,IAAI;QAClC,OAAOA,IAAI,CAACI,MAAM;MACpB,CAAC,CAAC;IACJ,CAAC,MACI;MACH,MAAM,IAAIH,KAAK,EAAE;IACnB;EACF;EAEA,MAAMI,UAAU,GAAG;IACjB,MAAMT,QAAQ,GAAG,MAAM,IAAI,CAAClB,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;IAClD,IAAIkB,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB,OAAOD,QAAQ,CAACE,IAAI,EAAE,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAAC;IAC7C,CAAC,MAAM;MACD,MAAM,IAAIC,KAAK,EAAE;IACrB;EAEJ;EAEA,MAAMK,aAAa,CAACC,EAAE,EAAE;IACpB,MAAMX,QAAQ,GAAG,MAAM,IAAI,CAAClB,GAAG,CAAE,YAAW6B,EAAG,EAAC,EAAE,KAAK,CAAC;IACxD,IAAIX,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB,OAAOD,QAAQ,CAACE,IAAI,EAAE,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAAC;IAC7C,CAAC,MAAM;MACD,MAAM,IAAIC,KAAK,EAAE;IACrB;EAEJ;EAEJ,MAAMO,YAAY,CAAChB,QAAQ,EAAEC,QAAQ,EAAEZ,IAAI,EAAE;IACzC,MAAMe,QAAQ,GAAG,MAAM,IAAI,CAAClB,GAAG,CAAC,UAAU,EAAE,MAAM,EAAEG,IAAI,EAAE,IAAI,EAAE;MAAEW,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACvF,IAAIG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB,OAAO,EAAE;IACb,CAAC,MAAM,IAAID,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC5B,OAAOD,QAAQ,CAACE,IAAI,EAAE,CAACC,IAAI,CAACC,IAAI,IAAI;QAClC,OAAOA,IAAI,CAACI,MAAM;MACpB,CAAC,CAAC;IACR,CAAC,MAAM;MACD,MAAM,IAAIH,KAAK,EAAE;IACrB;EACJ;EAEA,MAAMQ,YAAY,CAACjB,QAAQ,EAAEC,QAAQ,EAAEc,EAAE,EAAE;IACvC,MAAMX,QAAQ,GAAG,MAAM,IAAI,CAAClB,GAAG,CAAE,YAAW6B,EAAG,EAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE;MAAEf,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAC/F,IAAIG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MACzB,OAAO,EAAE;IACb,CAAC,MAAM,IAAID,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAChCa,OAAO,CAACC,GAAG,CAACf,QAAQ,CAACf,IAAI,CAACiB,IAAI,EAAE,CAAC;MACjC,OAAOF,QAAQ,CAACE,IAAI,EAAE,CAACC,IAAI,CAACC,IAAI,IAAI;QAChC,OAAOA,IAAI,CAACI,MAAM;MACpB,CAAC,CAAC;IACR,CAAC,MAAM;MACH,MAAM,IAAIH,KAAK,EAAE;IACrB;EAEJ;AAGJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}